// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using global.Data;

#nullable disable

namespace global.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606024651_VersaoInicial")]
    partial class VersaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("global.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ALERTA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Confirmado")
                        .HasMaxLength(1)
                        .HasColumnType("NVARCHAR2(1)")
                        .HasColumnName("ENVIADO");

                    b.Property<DateTime?>("DataAlerta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MENSAGEM");

                    b.Property<int?>("PrevisaoTempoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PREVISAO_TEMPO");

                    b.Property<int?>("SensorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPO_ALERTA");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("PrevisaoTempoId");

                    b.HasIndex("SensorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ALERTA");
                });

            modelBuilder.Entity("global.Models.LeituraSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LEITURA_SENSOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    b.Property<string>("Valor")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NIVEL_AGUA");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("LEITURA_SENSOR");
                });

            modelBuilder.Entity("global.Models.LogApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LOG");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENDPOINT");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PAYLOAD");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RESPOSTA");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPO");

                    b.HasKey("Id");

                    b.ToTable("LOG_API");
                });

            modelBuilder.Entity("global.Models.PrevisaoTempo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PREVISAO_TEMPO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condicao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONDICAO");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<string>("Precipitacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CHUVA_MM");

                    b.Property<string>("Temperatura")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TEMPERATURA");

                    b.Property<string>("Umidade")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UMIDADE");

                    b.Property<string>("Vento")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VENTO_KMH");

                    b.HasKey("Id");

                    b.ToTable("PREVISAO_TEMPO");
                });

            modelBuilder.Entity("global.Models.Sensor", b =>
                {
                    b.Property<int>("IdSensor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSensor"));

                    b.Property<string>("AlcanceAlerta")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ALCANCE_ALERTA");

                    b.Property<DateTime?>("DataInstalacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_INSTALACAO");

                    b.Property<string>("LocalizacaoSensor")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO_SENSOR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.HasKey("IdSensor");

                    b.ToTable("SENSORES");
                });

            modelBuilder.Entity("global.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("LocalizacaoUsuario")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO_USUARIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<string>("ReceberAlertas")
                        .HasMaxLength(1)
                        .HasColumnType("NVARCHAR2(1)")
                        .HasColumnName("RECEBER_ALERTAS");

                    b.HasKey("IdUsuario");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("global.Models.Alerta", b =>
                {
                    b.HasOne("global.Models.PrevisaoTempo", "PrevisaoTempo")
                        .WithMany()
                        .HasForeignKey("PrevisaoTempoId");

                    b.HasOne("global.Models.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId");

                    b.HasOne("global.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("PrevisaoTempo");

                    b.Navigation("Sensor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("global.Models.LeituraSensor", b =>
                {
                    b.HasOne("global.Models.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });
#pragma warning restore 612, 618
        }
    }
}
